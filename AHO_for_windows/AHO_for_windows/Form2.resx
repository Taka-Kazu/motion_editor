<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Iv8SFiL/Mikh/45iHv+1ehz/tnsc/7V7G/+1ehv/tnsb/7V7HP+QZB3/Oi4h/7R6HP+1exz/mWkd/3BQ
        H/+UZh3/kmUd/y8oIv8WGSP/Myoh/zUsIf8ZGyP/FRgj/xQXI/8kISL/PDAh/ycjIv8VGCP/STcg/zgt
        If8bGyL/Nywh/zEpIv8TFyP/JCEi/11EIP+MYR7/n20d/59tHf+OYh7/YEYf/yUiIv8TFyP/tHoc/7J4
        HP9OOyD/ERYj/yEfIv8mIiL/FRgj/1xDIP+pcxz/q3Qc/2dKH/8WGSP/LCYi/5BjHf+vdxz/lmcd/zIq
        Iv8XGSP/JCEi/xcZI/8cHCP/QTIh/xcZI/8TFyP/ERUj/xobI/8mIiL/JiIi/xscI/8RFiP/Excj/xUY
        I/+0ehz/s3kc/2pMH/8bGyP/FBcj/xMXI/8hHyL/mWkd/7d8HP+2exz/om8d/yYiIv9XQSD/tnsc/7R6
        HP+3fBz/ZEgf/xMWI/8UFyP/FBgj/y4nIv8rJSL/Excj/x4dI/9AMiH/JiIi/xQXI/8UFyP/JSIi/0Ay
        If8fHiL/FBcj/7R6HP+0ehz/snkc/25OH/8YGiP/FBgj/xwcI/+JXx7/uH0c/7h9HP+UZh3/HR0j/0c2
        If+xeBz/t3wc/7R6HP9UPiD/Excj/xMXI/8wKCL/kmUd/0w5IP8aGyP/Z0of/7F4HP95Vh7/Fxkj/xUY
        I/90Uh//snkc/2xNH/8cHCP/tHoc/7Z7HP+1exz/e1ce/xcZI/8VGCP/Excj/zUrIf99WB7/gVoe/0I0
        If81LCH/Miki/11EIP+IXx7/Y0gf/x0dI/8UGCP/Excj/zAoIv+jbx3/p3Ic/41iHv+udhz/t3wc/5Zn
        Hf8fHiL/HBwj/5FkHf+3fBz/r3cc/4tgHv+vdxz/dFIf/0o4IP8rJSL/FBgj/xQXI/8bHCP/IyAi/xka
        I/8ZGiP/aEsf/6x1HP+ebB3/PDAh/xYYI/8dHSP/JCEi/xcZI/8UGCP/GBoj/zctIf9RPSD/kGQd/7Z7
        HP+0ehz/r3cc/3xXHv96Vh7/rXYc/7R6HP+0ehz/tnsc/6JvHf8pJCL/DxQj/xMXI/8UFyP/LSYi/4Rc
        Hv+ebB3/bU4f/yolIv+cax3/t3wc/7h9HP9oSx//NCsh/41iHv+ebB3/ZUkf/xkbI/8UGCP/ERYj/w0T
        I/9bQyD/tnsc/7R6HP+0ehz/tnsc/7Z8HP+0ehz/tHoc/7R6HP+0ehz/rHUc/2FHH/82LCH/IiAi/xMX
        I/9rTR//uHwc/7Z7HP+xeBz/SDcg/3NRH/+yeRz/qHIc/0c2If95VR7/uH0c/7Z7HP+sdRz/OC0h/xUY
        I/8tJyL/QzQh/4deHv+1exz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/652
        HP9yUR//FRgj/2xNH/+4fBz/tnsc/7J5HP9FNSH/HBwj/0c3If84LiH/Fxkj/3pWHv+4fRz/tnsc/6x1
        HP82LCH/KiUi/5trHf+xeBz/tXsc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6
        HP+0ehz/tnsc/3pWHv8YGiP/Lici/4deHv+hbh3/cVAf/x4dI/9FNSH/gFoe/3FQH/8pJCL/NSwh/41i
        Hv+ebB3/ZUkf/xgaI/8xKSL/n20d/7Z7HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6
        HP+0ehz/tHoc/7R6HP96Vh7/IyAi/xQXI/8TFyP/HR0j/ycjIv8XGSP/KyUi/6BuHf+4fBz/uHwc/3ZU
        H/8VGCP/Hh0j/yUiIv8WGSP/FBcj/xUYI/85LiH/m2od/7V7HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6
        HP+0ehz/tHoc/7R6HP+0ehz/sXgc/0o4IP8PFCP/GRsj/x4dI/8UFyP/FBcj/xMXI/83LSH/rXUc/7V7
        HP+3fBz/iV8e/xkaI/8UFyP/FBcj/xYYI/8hHyL/FRgj/xUYI/9+WR7/tnwc/7R6HP+0ehz/tHoc/7R6
        HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+1exz/j2Md/1pCIP+CWx7/hVwe/yolIv8UFyP/FBgj/x0d
        I/95VR7/r3cc/6VxHf9OOyD/FBcj/xUYI/8VGCP/TDog/5VnHf9yUR//ZUkf/6p0HP+1ehz/tHoc/7R6
        HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+1ehz/tXsc/7d8HP+wdxz/QTMh/xMX
        I/8UFyP/EhYj/xwcI/87LyH/MSki/xQYI/8SFiP/FBgj/xUYI/9zUR//uH0c/7Z7HP+1exz/tHoc/7R6
        HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+1exz4tHoc/7R6HP+0ehz/tnsc/5Vn
        Hf8fHiL/EhYj/zYsIf9SPiD/JiIi/xIWI/8UGCP/OS4h/1U/IP8hHyL/ERUj/0M0If+wdxz/tHoc/7R6
        HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tXsc+bh9Hcm0ehz/tHoc/7R6
        HP+2exz/mWkd/zQrIf8vKCL/k2Yd/7d8HP9gRh//EhYj/x4dI/+RZB3/tnsc/25OH/8iICL/V0Eg/7B3
        HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+4fR3JvYAdXbV7
        HPG0ehz/tHoc/7R6HP+0ehz/o28d/55sHf+1ehz/t3wc/35YHv8WGSP/Lici/6RwHf+1exz/sXgc/5lp
        Hf+udhz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tXsc8r2A
        HV7NiyAGun4dfLV7HPO0ehz/tHoc/7R6HP+1exz/tXsc/7R6HP+1ehz/qnQc/4BaHv+NYh7/s3kc/7R6
        HP+0ehz/tnsc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7V7
        HPO6fh19zowgB8SFHwDJiSAHvYAdXLh9Hcq1exz5tHoc/7R6HP+0ehz/tHoc/7R6HP+1ehz/t3wc/7Z7
        HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7R6HP+0ehz/tHoc/7V7
        HPi4fR3KvIAdXcuKIAfGhh8AgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAE=
</value>
  </data>
</root>